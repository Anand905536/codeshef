// Problem
// Read problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
// There are NN cars (numbered 11 through NN) on a circular track with length NN. For each ii (2 \le i \le N2≤i≤N), the ii-th of them is at a distance i-1i−1 clockwise from car 11, i.e. car 11 needs to travel a distance i-1i−1 clockwise to reach car ii. Also, for each valid ii, the ii-th car has f_if 
// i
// ​
//   litres of gasoline in it initially.

// You are driving car 11 in the clockwise direction. To move one unit of distance in this direction, you need to spend 11 litre of gasoline. When you pass another car (even if you'd run out of gasoline exactly at that point), you steal all its gasoline. Once you do not have any gasoline left, you stop.

// What is the total clockwise distance travelled by your car?

// Input
// The first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.
// The first line of each test case contains a single integer NN.
// The second line contains NN space-separated integers f_1, f_2, dots, f_Nf 
// 1
// ​
//  ,f 
// 2
// ​
//  ,…,f 
// N
// ​
//  .
// Output
// For each test case, print a single line containing one integer ― the total clockwise distance travelled.

// Constraints
// 1 \le T \le 1001≤T≤100
// 1 \le N \le 1001≤N≤100
// 0 \le f_i \le 1000≤f 
// i
// ​
//  ≤100 for each valid ii
// Subtasks
// Subtask #1 (100 points): original constraints

// Sample 1:
// Input
// Output
// 3
// 5
// 3 0 0 0 0
// 5
// 1 1 1 1 1
// 5
// 5 4 3 2 1
// 3
// 5
// 15
// Explanation:
// Test case 11: The car starts with 33 liters of gasoline. Using this, the car can travel 33 units. On its journey, there is no other car having gasoline. Thus, the car stops after 33 units.

// Test case 22: The car starts with 11 liter of gasoline.

// After traveling 11 unit, it passes another car with 11 liter gasoline. Thus, the amount of gasoline left after traveling 11 unit is 11 liter.
// After traveling 22 units, it passes another car with 11 liter gasoline. Thus, the amount of gasoline left after traveling 22 units is 11 liter.
// After traveling 33 units, it passes another car with 11 liter gasoline. Thus, the amount of gasoline left after traveling 33 units is 11 liter.
// After traveling 44 units, it passes another car with 11 liter gasoline. Thus, the amount of gasoline left after traveling 44 units is 11 liter.
// After traveling 55 units, there is no car with gasoline. Thus, the car stops after 55 units.
// Test case 33: The car starts with 55 liters of gasoline.

// After traveling 11 unit, it passes another car with 44 liters gasoline. Thus, the amount of gasoline left after traveling 11 unit is 5-1+4 = 85−1+4=8 liters.
// After traveling 22 units, it passes another car with 33 liters gasoline. Thus, the amount of gasoline left after traveling 22 units is 8-1+3 = 108−1+3=10 liters.
// After traveling 33 units, it passes another car with 22 liters gasoline. Thus, the amount of gasoline left after traveling 33 units is 10-1+2 = 1110−1+2=11 liters.
// After traveling 44 units, it passes another car with 11 liter gasoline. Thus, the amount of gasoline left after traveling 44 units is 11-1+1 = 1111−1+1=11 liters.
// After traveling 55 units, there is no car with gasoline. Thus, after 55 units, 1010 liters of gasoline is left.
// The car can move 1010 more units using the leftover gasoline. The total distance travelled is 1515 units.









// ------------------in c++






#include<bits/stdc++.h>
using namespace std;
int compute(vector<int>v,int n)
{
	int dis=0;
	int fuel=v[0];
	int i=0;
	while(i<n-1)
	{
		if(fuel==0)break;
		dis+=1;
		fuel-=1;
		fuel+=v[i+1];
		i++;
	}
	return fuel+dis;
}
int main()
{
	int tc;
	cin>>tc;
	while(tc--)
	{
		int n;
		cin>>n;
		vector<int>v;
		for(int i=0;i<n;i++)
		{
			int j;
			cin>>j;
			v.push_back(j);
		}
		cout<<compute(v,n)<<endl;;
	}
	return 0;
}
