
A 1-indexed array is called positive if every element of the array is greater than or equal to the index on which it lies. Formally, an array BB of size MM is called positive if B_i \ge iB 
i
​
 ≥i for each 1\le i \le M1≤i≤M.

For example, the arrays [1], [2, 2], [3, 2, 4, 4][1],[2,2],[3,2,4,4] are positive while the arrays [2, 1], [3, 1, 2][2,1],[3,1,2] are not positive.

You are given an array AA containing NN integers. You want to distribute all elements of the array into some positive arrays. The elements of a positive array might not occur in the order they appear in the array AA.

Find the minimum number of positive arrays that the elements of the array AA can be divided into.


Input
Output
5
3
2 3 3
4
3 1 1 2
3
1 1 1
5
1 2 2 4 5
6
3 2 1 2 2 1
1
2
3
2
3
Explanation:
Test case 11: The given array is already positive. So the optimal division is [2,3,3][2,3,3].

Test case 22: One possible division is [1, 2], [1, 3][1,2],[1,3].

Test case 33: The only possible division is [1],[1],[1][1],[1],[1].

Test case 44: One possible division is [1, 2, 5], [2, 4][1,2,5],[2,4].

Test case 55: One possible division is [1, 2, 3], [1], [2,2][1,2,3],[1],[2,2].

















------------------------c++












#include <bits/stdc++.h>
using namespace std;

int main() {
    int tc;
    cin>>tc;
    while(tc--)
   {
   	  int n;
        cin >> n;
        vector<int>arr;
        for(int i = 0; i < n; i++)
        {
        	int j;
        	cin >>j;
            arr.push_back(j);
        }
        sort(arr.begin(), arr.end());
        int count = 1;
        for(int i = 0; i < n; i++)
        {    cout<<i;
        	
            if(arr[i] * count < i + 1)
            {
                count++;
                i--;
            }
        }
        cout<<endl;
        cout << count << endl;
   }
   	return 0;
}
